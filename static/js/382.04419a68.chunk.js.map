{"version":3,"file":"static/js/382.04419a68.chunk.js","mappings":"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","sources":["components/styled/Form.styled.js","helpers/brandsArray.js","helpers/priceArray.js","components/styled/Arrows.styled.js","components/Form.jsx","pages/CatalogPage.jsx"],"sourcesContent":["import { device } from '../../helpers/breakpoints';\nimport { styled } from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  gap: 18px;\n  align-items: flex-end;\n\n  margin: 0 auto 70px;\n  width: fit-content;\n\n    @media ${device.lg} {\n    flex-wrap: nowrap;\n    justify-content: center;\n  }\n`;\n\nexport const WrapForMedia = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  column-gap: 18px;\n`\n\nexport const InputLabelWrapper = styled.div(({ exec }) => `\n\tposition: relative;\n\tdisplay: flex;\n  gap: 8px;\n  flex-direction: column;\n  justify-content: space-between;\n\tcolor: #8A8A89;\n\tfont-size: 14px;\n\t\n\theight: 74px;\n\twidth: ${exec === 'brand' ? '224px' : exec === 'mileage' ? '320px' : '125px'};\n\n  &:is(:hover, :focus) svg {\n    stroke: #3470ff; \n  };\n\n        @media ${device.xs} {\n\twidth: ${exec === 'brand' ? '166px' : exec === 'mileage' ? '260px' : '96px'};\n  }\n\t`\n);\n\n//mileage\nexport const MileageWrap = styled.div`\nposition: relative;\ndisplay: flex;\nbackground-color: #F7F7FB;\nborder-radius: 14px;\n\n&::after {\n\tcontent: '';\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 0;\n\twidth: 1px;\n\theight: 48px;\n\tbackground-color: rgba(138, 137, 137, 0.2);\n}\n\n& > input {width: 50%}\n`\n\nexport const Input = styled.input`\n  height: 48px;\n\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.12;\n  font-size: 16px;\n\n  padding: 14px 18px;\n  background-color: #f7f7fb;\n  border-radius: 14px;\n  border: none;\n  outline: none;\n\n  cursor: text;\n\n  &::placeholder {\n    color: #121417;\n  }\n\n`;\n\n//ul\nexport const FilterListWrapper = styled.div`\n  position: absolute;\n  z-index: 53;\n  top: 70px;\n  padding: 14px;\n  padding-right: 7px;\n  background-color: #fcfcfc;\n  border-radius: 12px;\n  z-index: 1;\n  width: 100%;\n  outline: 1px solid rgba(18, 20, 23, 0.05);\n  font-size: 16px;\n`;\n\nexport const FilterList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  height: auto;\n  max-height: 272px;\n  overflow-y: auto;\n\n  cursor: pointer;\n  transition: color, linear, 250ms;\n\n  & > li:is(:hover, :focus) {\n    color: #3470ff;\n  }\n\n  &::-webkit-scrollbar {\n    position: absolute;\n    top: 0;\n    right: 7px;\n    width: 6px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: rgba(18, 20, 23, 0.05);\n    border-radius: 12px;\n  }\n`;\n","export const brandsArray = [\n'Buick',\n        'Volvo',\n        'Hummer',\n        'Subaru',\n        'Mitsubishi',\n        'Nissan',\n        'Lincoln',\n        'GMC',\n        'Ford',\n        'Honda',\n        'Acura',\n        'Chevrolet',\n        'MINI',\n        'Bentley',\n        'JEEP',\n        'Audi',\n        'BMW',\n        'Mercedes-Benz',\n        'Chrysler',\n        'Kia',\n        'Land Rover',\n]","export const priceArray = [30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150]","import { styled } from 'styled-components';\n\nexport const SvgWrap = styled.button`\nwidth: 40px;\nheight: 40px;\nbackground-color: #F7F7FB;\n\nposition: absolute;\ntop: 30px;\nright: 8px;\nz-index: 50;\n\ndisplay: flex;\nalign-items: center;\njustify-content: center;\npadding: 0;\nborder: none;\n\ncursor: pointer;\n\n\n&:is(:hover) svg {\n    stroke: #3470ff; \n}\n`\n\nexport const Svg = styled.svg(({direct}) => `\ndisplay: block;\nwidth: 20px;\nheight: 20px;\nstroke: ${direct === 'up' ? '#3470ff' : '#121417'};\n\nrotate: ${direct === 'up' && '180deg'};\n\ntransition: stroke 250ms linear, rotate 200ms linear;\n`);","import React from 'react';\nimport toast from 'react-hot-toast';\nimport sprite from '../img/sprite.svg';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilters } from '../redux/slice';\nimport { Button } from '../pages/styled/main.styled';\nimport {\n  FilterList,\n  FilterListWrapper,\n  Input,\n  InputLabelWrapper,\n  MileageWrap,\n  StyledForm,\n  WrapForMedia,\n} from './styled/Form.styled';\nimport { brandsArray } from '../helpers/brandsArray';\nimport { priceArray } from '../helpers/priceArray';\nimport { Svg, SvgWrap } from './styled/Arrows.styled';\nimport { selectFilters } from '../redux/selectors';\n\nconst initOpen = { brand: false, price: false };\n\nconst Form = () => {\n  const {\n    brand: existBrand,\n    price: existPrice,\n    mileageFrom: existFrom,\n    mileageTo: existTo,\n  } = useSelector(selectFilters);\n\n  const [brand, setBrand] = useState(existBrand || '');\n  const [price, setPrice] = useState(existPrice || '');\n  const [mileageFrom, setMileageFrom] = useState(existFrom || '');\n  const [mileageTo, setMileageTo] = useState(existTo || '');\n  const [isOpen, setOpen] = useState(initOpen);\n\n  const dispatch = useDispatch();\n\n  //handle open dropdowm\n  const handleOpen = e => {\n    const type = e.currentTarget.dataset.type;\n    setOpen(prev => ({ ...initOpen, [type]: !prev[type] }));\n  };\n\n  //handle close dropdown on click outside\n  const handleCloseDropdown = e => {\n    if (\n      e.target.dataset.type !== 'brand' &&\n      e.target.dataset.type !== 'price'\n    ) {\n      setOpen(initOpen);\n      return document.removeEventListener('click', handleCloseDropdown);\n    }\n  };\n\n  document.addEventListener('click', handleCloseDropdown);\n\n  //wrong value in mileage\n  const handleWrongValue = (value, form) => {\n    if (form === 'mileageFrom') {\n      setMileageFrom(value);\n    } else {\n      setMileageTo(value);\n    }\n\n    setTimeout(() => {\n      toast.error('\"From\" should be less or equal \"To\"', {\n        position: 'top-center',\n      });\n    }, 1000);\n  };\n\n  //change on input\n  const handleChange = ({ target: { value, name } }) => {\n    switch (name) {\n      case 'brand':\n        setBrand(value);\n        break;\n\n      case 'price':\n        setPrice(value.toString());\n        break;\n\n      case 'mileageFrom':\n        mileageTo !== '' && Number(mileageTo) <= value\n          ? handleWrongValue(mileageTo, 'mileageFrom')\n          : setMileageFrom(value.toString());\n        break;\n\n      case 'mileageTo':\n        setMileageTo(value.toString());\n        break;\n\n      default:\n        console.log('looks like you use inputs wrong');\n    }\n  };\n\n  //blur on mileage\n  const handleBlur = () => {\n    mileageFrom !== '' &&\n      Number(mileageFrom) > mileageTo &&\n      handleWrongValue(mileageFrom);\n  };\n\n  // ckick on brand category\n  const handleBrandClick = e => {\n    if (e.target.nodeName !== 'LI') return;\n    const value = e.target.textContent;\n    setBrand(value.toString());\n    setOpen(initOpen);\n  };\n\n  //click on price\n  const handlePriceClick = e => {\n    if (e.target.nodeName !== 'LI') return;\n    const value = e.target.textContent;\n    setPrice(value.toString());\n    setOpen(initOpen);\n  };\n\n  //submit\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(setFilters({ brand, price, mileageFrom, mileageTo }));\n  };\n\n  //reset\n  const handleReset = (e) => {\n        e.preventDefault();\n\n    setBrand('');\n    setPrice('');\n    setMileageFrom('');\n    setMileageTo('');\n\n    dispatch(setFilters({ brand: '', price: '', mileageFrom: '', mileageTo: '' }));\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit} onReset={handleReset}>\n      <Button\n        type=\"reset\"\n        reset={'reset'}\n        disabled={!brand && !price && !mileageFrom && !mileageTo}\n        width={104}\n        height={48}\n        margin={'0'}\n      >\n        Clear all\n      </Button>\n\n      <WrapForMedia>\n        <InputLabelWrapper exec={'brand'}>\n          <SvgWrap onClick={handleOpen} data-type=\"brand\">\n            <Svg direct={isOpen.brand ? 'up' : 'down'} data-type=\"brand\">\n              <use href={`${sprite}#icon-chevron-down`}></use>\n            </Svg>\n          </SvgWrap>\n          <label htmlFor=\"brandInput\">Car brand</label>\n          <Input\n            type=\"text\"\n            name=\"brand\"\n            id=\"brandInput\"\n            value={brand}\n            onChange={handleChange}\n            onFocus={handleOpen}\n            placeholder=\"Enter the text\"\n            data-type=\"brand\"\n            autoComplete=\"off\"\n          />\n          {isOpen.brand && (\n            <FilterListWrapper>\n              <FilterList data-type=\"brand\" onClick={handleBrandClick}>\n                {brandsArray\n                  .filter(one =>\n                    one\n                      .toLocaleLowerCase()\n                      .includes(brand.toLocaleLowerCase().trim())\n                  )\n                  .map((one, index) => {\n                    return <li key={index}>{one}</li>;\n                  })}\n              </FilterList>\n            </FilterListWrapper>\n          )}\n        </InputLabelWrapper>\n\n        <InputLabelWrapper>\n          <SvgWrap onClick={handleOpen} data-type=\"price\" type=\"button\">\n            <Svg direct={isOpen.price ? 'up' : 'down'} data-type=\"price\">\n              <use href={`${sprite}#icon-chevron-down`}></use>\n            </Svg>\n          </SvgWrap>\n\n          <label htmlFor=\"priceInput\">Price / 1 hour</label>\n          <Input\n            type=\"number\"\n            name=\"price\"\n            id=\"priceInput\"\n            value={price}\n            onChange={handleChange}\n            onFocus={handleOpen}\n            placeholder=\"To $\"\n            data-type=\"price\"\n            autoComplete=\"off\"\n            min={0}\n            max={150}\n            step={10}\n          />\n\n          {isOpen.price && (\n            <FilterListWrapper>\n              <FilterList data-type=\"price\" onClick={handlePriceClick}>\n                {priceArray.map((one, index) => {\n                  return <li key={index}>{one}</li>;\n                })}\n              </FilterList>\n            </FilterListWrapper>\n          )}\n        </InputLabelWrapper>\n      </WrapForMedia>\n\n      <InputLabelWrapper exec={'mileage'}>\n        <label htmlFor=\"mileageInput\">Car mileage / km</label>\n        <MileageWrap>\n          <Input\n            type=\"number\"\n            name=\"mileageFrom\"\n            id=\"mileageInput\"\n            value={mileageFrom}\n            onChange={handleChange}\n            min={1}\n            placeholder=\"From\"\n          />\n          <Input\n            type=\"number\"\n            name=\"mileageTo\"\n            id=\"mileageInput\"\n            value={mileageTo}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            min={1}\n            placeholder=\"To\"\n          />\n        </MileageWrap>\n      </InputLabelWrapper>\n\n      <Button type=\"submit\" width={136} margin={'0'} height={48}>\n        Search\n      </Button>\n    </StyledForm>\n  );\n};\nexport default Form;\n","import React, { useEffect } from 'react';\nimport { Section, Wrap } from './styled/main.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllCars } from '../redux/thunk';\nimport CarsList from '../components/CarsList';\nimport { selectCars, selectVisibleCars } from '../redux/selectors';\nimport { toggleFavCars } from '../redux/slice';\nimport Form from '../components/Form';\nimport { Empty } from '../components/styled/Empty.styled';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectVisibleCars);\n  const allCars = useSelector(selectCars);\n\n  useEffect(() => {\n    if (!allCars || !allCars.length) dispatch(fetchAllCars());\n  }, [dispatch, allCars]);\n\n  const toggleFavorite = itemId => {\n    console.log(itemId)\n    dispatch(toggleFavCars(itemId));\n  };\n\n  return (\n    <Wrap>\n      <Section>\n        <Form  />\n        {cars.length ? (\n          <CarsList cars={cars} toggleFavorite={toggleFavorite} />\n        ) : (\n          <Empty>\n            No cars were found by your request. Try search with other filter\n            values.\n          </Empty>\n        )}\n      </Section>\n    </Wrap>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["StyledForm","styled","_templateObject","_taggedTemplateLiteral","device","WrapForMedia","_templateObject2","InputLabelWrapper","_ref","exec","concat","MileageWrap","_templateObject3","Input","_templateObject4","FilterListWrapper","_templateObject5","FilterList","_templateObject6","brandsArray","priceArray","SvgWrap","Svg","direct","initOpen","brand","price","_useSelector","useSelector","selectFilters","existBrand","existPrice","existFrom","mileageFrom","existTo","mileageTo","_useState","useState","_useState2","_slicedToArray","setBrand","_useState3","_useState4","setPrice","_useState5","_useState6","setMileageFrom","_useState7","_useState8","setMileageTo","_useState9","_useState10","isOpen","setOpen","dispatch","useDispatch","handleOpen","e","type","currentTarget","dataset","prev","_objectSpread","_defineProperty","document","addEventListener","handleCloseDropdown","target","removeEventListener","handleWrongValue","value","form","setTimeout","toast","position","handleChange","_ref$target","name","toString","Number","console","log","_jsxs","onSubmit","preventDefault","setFilters","onReset","children","_jsx","Button","reset","disabled","width","height","margin","onClick","href","sprite","htmlFor","id","onChange","onFocus","placeholder","autoComplete","nodeName","textContent","one","toLocaleLowerCase","includes","trim","map","index","min","max","step","onBlur","cars","selectVisibleCars","allCars","selectCars","useEffect","length","fetchAllCars","Wrap","Section","Form","CarsList","toggleFavorite","itemId","toggleFavCars","Empty"],"sourceRoot":""}