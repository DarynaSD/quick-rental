{"version":3,"file":"static/js/641.879a1771.chunk.js","mappings":"uNAEcA,GAAOC,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CAC9BC,QAAS,OACRC,SAAU,OACXC,eAAgB,gBAChBC,SAAU,KACVC,OAAQ,GACRC,UAAW,GAEXC,eAAgB,WAGPC,GAAOR,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CAC7BS,MAAO,0BACPC,UAAW,qCACXC,aAAc,GACdC,SAAU,SAEVC,WAAY,2BAEZ,uBAAwB,CACpBH,UAAW,0CAINI,GAAWd,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClCe,SAAU,WACVJ,aAAc,GACdC,SAAU,WAGDI,GAAUhB,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACjCe,SAAU,WACVE,IAAK,EACLR,MAAO,OACPS,OAAQ,IACRC,gBAAiB,2CAGRC,GAAYpB,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CACnCC,QAAS,OACTE,eAAgB,gBAChBkB,UAAW,KAGFC,GAAWtB,EAAAA,EAAAA,IAAO,MAAPA,CAAc,CAClCqB,UAAW,EACXE,MAAO,wBACPC,SAAU,K,SCpBd,EAxBqB,SAAHC,GAAkB,IAAZC,EAAID,EAAJC,KACZC,EACND,EADMC,KAAMC,EACZF,EADYE,MAAOC,EACnBH,EADmBG,KAAMC,EACzBJ,EADyBI,YAAsBC,GAC/CL,EADsCM,QACtCN,EAD+CK,eAAeE,EAC9DP,EAD8DO,IAEhE,OACEC,EAAAA,EAAAA,MAAC1B,EAAI,CAAA2B,SAAA,EACHD,EAAAA,EAAAA,MAACpB,EAAQ,CAAAqB,SAAA,EACPC,EAAAA,EAAAA,KAACpB,EAAO,KACRoB,EAAAA,EAAAA,KAAA,OAAKC,IAAKJ,GATD,wEASyBK,IAAYV,QAEhDM,EAAAA,EAAAA,MAACd,EAAS,CAAAe,SAAA,EACRD,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAOR,EAAK,QACZO,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAOP,GAASA,EAAM,SACtBQ,EAAAA,EAAAA,KAAA,QAAAD,SAAON,QAETO,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,QAENM,EAAAA,EAAAA,KAACd,EAAQ,CAAAa,UACPD,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAiBJ,EAAe,WAI1C,ECXA,EAViB,SAAHN,GAAkB,IAAZc,EAAId,EAAJc,KAClB,OACEH,EAAAA,EAAAA,KAACrC,EAAI,CAAAoC,SACFI,EAAKC,KAAI,SAAAC,GAAG,OACXL,EAAAA,EAAAA,KAACM,EAAY,CAAChB,KAAMe,IAAUE,EAAAA,EAAAA,MAAY,KAIlD,ECPaC,EAAa,SAAAC,GAAK,OAAIA,EAAMN,KAAKA,IAAK,ECkBnD,EAjBoB,WAClB,IAAMO,GAAWC,EAAAA,EAAAA,MACXR,GAAOS,EAAAA,EAAAA,IAAYJ,GAMzB,OAJAK,EAAAA,EAAAA,YAAU,WACHV,GAASA,EAAKW,QAAQJ,GAASK,EAAAA,EAAAA,KACtC,GAAG,CAACL,EAAUP,KAGZH,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAAAjB,UACHC,EAAAA,EAAAA,KAACiB,EAAAA,GAAO,CAAAlB,UACNC,EAAAA,EAAAA,KAACkB,EAAQ,CAACf,KAAMA,OAIxB,C","sources":["components/styled/List.styled.js","components/CarListItem.jsx","components/CarsList.jsx","redux/selectors.js","pages/CatalogPage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\n export const List = styled('ul')({\n    display: 'flex',\n     flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    maxWidth: 1440,\n    rowGap: 50,\n    columnGap: 29,\n    \n    scrollBehavior: 'smooth',\n })\n\nexport const Item = styled('li')({\n    width: 'calc((100% / 4) - 29px)',\n    boxShadow: '0px 15px 30px 0px rgba(0, 0, 0, 0)',\n    borderRadius: 14,\n    overflow: 'hidden',\n\n    transition: 'boxShadow, linear, 250ms',\n    \n    '&:is(:hover, :focus)': {\n        boxShadow: '0px 15px 30px 0px rgba(0, 0, 0, 0.2)',\n    },\n})\n\nexport const ImgThumb = styled('div')({\n    position: 'relative',\n    borderRadius: 14,\n    overflow: 'hidden',\n})\n\nexport const Overlay = styled('div')({\n    position: 'absolute',\n    top: 0,\n    width: '100%',\n    height: 100,\n    backgroundImage: 'linear-gradient( #121417, transparent)',\n})\n\nexport const TextThumb = styled('div')({\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: 14,\n})\n\nexport const AddThumb = styled('div')({\n    marginTop: 8,\n    color: 'rgba(18, 20, 23, 0.5)',\n    fontSize: 12,\n})","import React from 'react';\nimport { AddThumb, ImgThumb, Item, Overlay, TextThumb } from './styled/List.styled';\n\nconst defaultImg = 'https://www.gavalimotors.com/adminpanel/assets/images/carnotfound.jpg'\n\nconst CarsListItem = ({ item }) => {\n    const { make, model, year, rentalPrice, address, rentalCompany, img } =\n      item;\n    return (\n      <Item>\n        <ImgThumb>\n          <Overlay />\n          <img src={img ? img : defaultImg} alt={(make, model)} />\n        </ImgThumb>\n        <TextThumb>\n          <p>\n            <span>{make} </span>\n            <span>{model && model}, </span>\n            <span>{year}</span>\n          </p>\n          <p>{rentalPrice}</p>\n        </TextThumb>\n        <AddThumb>\n          <span>{(address, rentalCompany)} </span>\n        </AddThumb>\n      </Item>\n    );\n};\n\nexport default CarsListItem;","import React from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport CarsListItem from './CarListItem';\nimport { List } from './styled/List.styled';\n\nconst CarsList = ({ cars }) => {\n  return (\n    <List>\n      {cars.map(one => (\n        <CarsListItem item={one} key={nanoid()} />\n      ))}\n    </List>\n  );\n};\n\nexport default CarsList;","// import { createSelector } from '@reduxjs/toolkit';\n// import { selectFilter } from '../redux/selectors';\n\nexport const selectLoading = state => state.cars.isLoading;\n\nexport const selectError = state => state.cars.error;\n\nexport const selectCars = state => state.cars.cars;\n\nexport const selectFavCars = state => state.cars.favorites;\n\n// export const selectVisibleContacts = createSelector(\n//   [selectCars, selectFilter],\n//   (contacts, filter) => {\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   }\n// );","import React, { useEffect } from 'react';\nimport { Section, Wrap } from './styled/main.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAllCars } from '../redux/thunk';\nimport CarsList from '../components/CarsList';\nimport { selectCars } from '../redux/selectors';\n\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const cars = useSelector(selectCars);\n\n  useEffect(() => {\n    if (!cars || !cars.length) dispatch(fetchAllCars());\n  }, [dispatch, cars]);\n\n  return (\n    <Wrap>\n      <Section>\n        <CarsList cars={cars} />\n      </Section>\n    </Wrap>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["List","styled","display","flexWrap","justifyContent","maxWidth","rowGap","columnGap","scrollBehavior","Item","width","boxShadow","borderRadius","overflow","transition","ImgThumb","position","Overlay","top","height","backgroundImage","TextThumb","marginTop","AddThumb","color","fontSize","_ref","item","make","model","year","rentalPrice","rentalCompany","address","img","_jsxs","children","_jsx","src","alt","cars","map","one","CarsListItem","nanoid","selectCars","state","dispatch","useDispatch","useSelector","useEffect","length","fetchAllCars","Wrap","Section","CarsList"],"sourceRoot":""}